
DesignAssingment4BT2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000005d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000600  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aaf  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ad  00000000  00000000  0000111f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000373  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00001e40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004db  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000119  00000000  00000000  0000238f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000024a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a4 30       	cpi	r26, 0x04	; 4
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <main>
  d4:	0c 94 ac 02 	jmp	0x558	; 0x558 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <adc_init>:
}


//initialize adc function
void adc_init(void){
	ADMUX =  (0<<REFS1) | 	(1<<REFS0) | (1<<ADLAR) | (0<<MUX2)  | (0<<MUX1)  | (0<<MUX0);
  dc:	80 e6       	ldi	r24, 0x60	; 96
  de:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = (1<<ADEN)  | (0<<ADSC)  | (0<<ADATE) | (0<<ADIF)  | (0<<ADIE)  | (1<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
  e2:	85 e8       	ldi	r24, 0x85	; 133
  e4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
  e8:	08 95       	ret

000000ea <read_adc>:
}

//read adc function	
void read_adc(void){
  ea:	bf 92       	push	r11
  ec:	cf 92       	push	r12
  ee:	df 92       	push	r13
  f0:	ef 92       	push	r14
  f2:	ff 92       	push	r15
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
	unsigned char i = 10;//variable for sample amounts
	adc_value = 0;//initialize adc_value
  fc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 100:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 104:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
 108:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
 10c:	0f 2e       	mov	r0, r31
 10e:	fa e0       	ldi	r31, 0x0A	; 10
 110:	bf 2e       	mov	r11, r31
 112:	f0 2d       	mov	r31, r0
	while(i--){
		ADCSRA |= (1<<ADSC);//enable Start Conversion
 114:	ca e7       	ldi	r28, 0x7A	; 122
 116:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC));//wait until enable & start conversion
		adc_value += ADC;//pc0 value added & stored into adc_value
 118:	08 e7       	ldi	r16, 0x78	; 120
 11a:	10 e0       	ldi	r17, 0x00	; 0
//read adc function	
void read_adc(void){
	unsigned char i = 10;//variable for sample amounts
	adc_value = 0;//initialize adc_value
	while(i--){
		ADCSRA |= (1<<ADSC);//enable Start Conversion
 11c:	88 81       	ld	r24, Y
 11e:	80 64       	ori	r24, 0x40	; 64
 120:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC));//wait until enable & start conversion
 122:	88 81       	ld	r24, Y
 124:	86 fd       	sbrc	r24, 6
 126:	fd cf       	rjmp	.-6      	; 0x122 <read_adc+0x38>
		adc_value += ADC;//pc0 value added & stored into adc_value
 128:	f8 01       	movw	r30, r16
 12a:	60 81       	ld	r22, Z
 12c:	71 81       	ldd	r23, Z+1	; 0x01
 12e:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <_edata>
 132:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <_edata+0x1>
 136:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <_edata+0x2>
 13a:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <_edata+0x3>
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 1e 02 	call	0x43c	; 0x43c <__floatunsisf>
 146:	a7 01       	movw	r20, r14
 148:	96 01       	movw	r18, r12
 14a:	0e 94 11 01 	call	0x222	; 0x222 <__addsf3>
 14e:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 152:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 156:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 15a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
 15e:	ba 94       	dec	r11

//read adc function	
void read_adc(void){
	unsigned char i = 10;//variable for sample amounts
	adc_value = 0;//initialize adc_value
	while(i--){
 160:	b1 10       	cpse	r11, r1
 162:	dc cf       	rjmp	.-72     	; 0x11c <read_adc+0x32>
		ADCSRA |= (1<<ADSC);//enable Start Conversion
		while(ADCSRA & (1<<ADSC));//wait until enable & start conversion
		adc_value += ADC;//pc0 value added & stored into adc_value
	}
	adc_value = adc_value/10;//average of values
 164:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 168:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 16c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 170:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e2       	ldi	r20, 0x20	; 32
 17a:	51 e4       	ldi	r21, 0x41	; 65
 17c:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__divsf3>
 180:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 184:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 188:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 18c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	1f 91       	pop	r17
 196:	0f 91       	pop	r16
 198:	ff 90       	pop	r15
 19a:	ef 90       	pop	r14
 19c:	df 90       	pop	r13
 19e:	cf 90       	pop	r12
 1a0:	bf 90       	pop	r11
 1a2:	08 95       	ret

000001a4 <main>:
void adc_init(void);
void read_adc(void);

//main function
int main(void){
	adc_init();//initialize adc
 1a4:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_init>
	PORTC |=  (1<<0);//activate pullup resistor
 1a8:	40 9a       	sbi	0x08, 0	; 8
	DDRB   =  (1<<1);//pb1 output
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	84 b9       	out	0x04, r24	; 4
	
	
	//configuration of timer1
	ICR1 = 4999;  //freq = 50Hz, period = 20ms
 1ae:	87 e8       	ldi	r24, 0x87	; 135
 1b0:	93 e1       	ldi	r25, 0x13	; 19
 1b2:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 1b6:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	TCCR1A |= (1<<COM1A1)|(1<<COM1B1);
 1ba:	e0 e8       	ldi	r30, 0x80	; 128
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	80 6a       	ori	r24, 0xA0	; 160
 1c2:	80 83       	st	Z, r24
	TCCR1A |= (1<<WGM11);//CTC Mode
 1c4:	80 81       	ld	r24, Z
 1c6:	82 60       	ori	r24, 0x02	; 2
 1c8:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12)|(1<<WGM13);//CTC Mode
 1ca:	e1 e8       	ldi	r30, 0x81	; 129
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	88 61       	ori	r24, 0x18	; 24
 1d2:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS10) |(1<<CS11);//prescaler 64
 1d4:	80 81       	ld	r24, Z
 1d6:	83 60       	ori	r24, 0x03	; 3
 1d8:	80 83       	st	Z, r24
	while (1){
		read_adc();//call read function
		_delay_ms(50);
		
		//servo motor configuration
		OCR1A = adc_value;
 1da:	c8 e8       	ldi	r28, 0x88	; 136
 1dc:	d0 e0       	ldi	r29, 0x00	; 0
	TCCR1A |= (1<<WGM11);//CTC Mode
	TCCR1B |= (1<<WGM12)|(1<<WGM13);//CTC Mode
	TCCR1B |= (1<<CS10) |(1<<CS11);//prescaler 64
	
	while (1){
		read_adc();//call read function
 1de:	0e 94 75 00 	call	0xea	; 0xea <read_adc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e2:	2f ef       	ldi	r18, 0xFF	; 255
 1e4:	80 e7       	ldi	r24, 0x70	; 112
 1e6:	92 e0       	ldi	r25, 0x02	; 2
 1e8:	21 50       	subi	r18, 0x01	; 1
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	90 40       	sbci	r25, 0x00	; 0
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <main+0x44>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <main+0x4e>
 1f2:	00 00       	nop
		_delay_ms(50);
		
		//servo motor configuration
		OCR1A = adc_value;
 1f4:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 1f8:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 1fc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 200:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 204:	0e 94 ef 01 	call	0x3de	; 0x3de <__fixunssfsi>
 208:	79 83       	std	Y+1, r23	; 0x01
 20a:	68 83       	st	Y, r22
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	84 e3       	ldi	r24, 0x34	; 52
 210:	9c e0       	ldi	r25, 0x0C	; 12
 212:	21 50       	subi	r18, 0x01	; 1
 214:	80 40       	sbci	r24, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x6e>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x78>
 21c:	00 00       	nop
 21e:	df cf       	rjmp	.-66     	; 0x1de <main+0x3a>

00000220 <__subsf3>:
 220:	50 58       	subi	r21, 0x80	; 128

00000222 <__addsf3>:
 222:	bb 27       	eor	r27, r27
 224:	aa 27       	eor	r26, r26
 226:	0e 94 28 01 	call	0x250	; 0x250 <__addsf3x>
 22a:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_round>
 22e:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__fp_pscA>
 232:	38 f0       	brcs	.+14     	; 0x242 <__addsf3+0x20>
 234:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__fp_pscB>
 238:	20 f0       	brcs	.+8      	; 0x242 <__addsf3+0x20>
 23a:	39 f4       	brne	.+14     	; 0x24a <__addsf3+0x28>
 23c:	9f 3f       	cpi	r25, 0xFF	; 255
 23e:	19 f4       	brne	.+6      	; 0x246 <__addsf3+0x24>
 240:	26 f4       	brtc	.+8      	; 0x24a <__addsf3+0x28>
 242:	0c 94 61 02 	jmp	0x4c2	; 0x4c2 <__fp_nan>
 246:	0e f4       	brtc	.+2      	; 0x24a <__addsf3+0x28>
 248:	e0 95       	com	r30
 24a:	e7 fb       	bst	r30, 7
 24c:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__fp_inf>

00000250 <__addsf3x>:
 250:	e9 2f       	mov	r30, r25
 252:	0e 94 83 02 	call	0x506	; 0x506 <__fp_split3>
 256:	58 f3       	brcs	.-42     	; 0x22e <__addsf3+0xc>
 258:	ba 17       	cp	r27, r26
 25a:	62 07       	cpc	r22, r18
 25c:	73 07       	cpc	r23, r19
 25e:	84 07       	cpc	r24, r20
 260:	95 07       	cpc	r25, r21
 262:	20 f0       	brcs	.+8      	; 0x26c <__addsf3x+0x1c>
 264:	79 f4       	brne	.+30     	; 0x284 <__addsf3x+0x34>
 266:	a6 f5       	brtc	.+104    	; 0x2d0 <__addsf3x+0x80>
 268:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_zero>
 26c:	0e f4       	brtc	.+2      	; 0x270 <__addsf3x+0x20>
 26e:	e0 95       	com	r30
 270:	0b 2e       	mov	r0, r27
 272:	ba 2f       	mov	r27, r26
 274:	a0 2d       	mov	r26, r0
 276:	0b 01       	movw	r0, r22
 278:	b9 01       	movw	r22, r18
 27a:	90 01       	movw	r18, r0
 27c:	0c 01       	movw	r0, r24
 27e:	ca 01       	movw	r24, r20
 280:	a0 01       	movw	r20, r0
 282:	11 24       	eor	r1, r1
 284:	ff 27       	eor	r31, r31
 286:	59 1b       	sub	r21, r25
 288:	99 f0       	breq	.+38     	; 0x2b0 <__addsf3x+0x60>
 28a:	59 3f       	cpi	r21, 0xF9	; 249
 28c:	50 f4       	brcc	.+20     	; 0x2a2 <__addsf3x+0x52>
 28e:	50 3e       	cpi	r21, 0xE0	; 224
 290:	68 f1       	brcs	.+90     	; 0x2ec <__addsf3x+0x9c>
 292:	1a 16       	cp	r1, r26
 294:	f0 40       	sbci	r31, 0x00	; 0
 296:	a2 2f       	mov	r26, r18
 298:	23 2f       	mov	r18, r19
 29a:	34 2f       	mov	r19, r20
 29c:	44 27       	eor	r20, r20
 29e:	58 5f       	subi	r21, 0xF8	; 248
 2a0:	f3 cf       	rjmp	.-26     	; 0x288 <__addsf3x+0x38>
 2a2:	46 95       	lsr	r20
 2a4:	37 95       	ror	r19
 2a6:	27 95       	ror	r18
 2a8:	a7 95       	ror	r26
 2aa:	f0 40       	sbci	r31, 0x00	; 0
 2ac:	53 95       	inc	r21
 2ae:	c9 f7       	brne	.-14     	; 0x2a2 <__addsf3x+0x52>
 2b0:	7e f4       	brtc	.+30     	; 0x2d0 <__addsf3x+0x80>
 2b2:	1f 16       	cp	r1, r31
 2b4:	ba 0b       	sbc	r27, r26
 2b6:	62 0b       	sbc	r22, r18
 2b8:	73 0b       	sbc	r23, r19
 2ba:	84 0b       	sbc	r24, r20
 2bc:	ba f0       	brmi	.+46     	; 0x2ec <__addsf3x+0x9c>
 2be:	91 50       	subi	r25, 0x01	; 1
 2c0:	a1 f0       	breq	.+40     	; 0x2ea <__addsf3x+0x9a>
 2c2:	ff 0f       	add	r31, r31
 2c4:	bb 1f       	adc	r27, r27
 2c6:	66 1f       	adc	r22, r22
 2c8:	77 1f       	adc	r23, r23
 2ca:	88 1f       	adc	r24, r24
 2cc:	c2 f7       	brpl	.-16     	; 0x2be <__addsf3x+0x6e>
 2ce:	0e c0       	rjmp	.+28     	; 0x2ec <__addsf3x+0x9c>
 2d0:	ba 0f       	add	r27, r26
 2d2:	62 1f       	adc	r22, r18
 2d4:	73 1f       	adc	r23, r19
 2d6:	84 1f       	adc	r24, r20
 2d8:	48 f4       	brcc	.+18     	; 0x2ec <__addsf3x+0x9c>
 2da:	87 95       	ror	r24
 2dc:	77 95       	ror	r23
 2de:	67 95       	ror	r22
 2e0:	b7 95       	ror	r27
 2e2:	f7 95       	ror	r31
 2e4:	9e 3f       	cpi	r25, 0xFE	; 254
 2e6:	08 f0       	brcs	.+2      	; 0x2ea <__addsf3x+0x9a>
 2e8:	b0 cf       	rjmp	.-160    	; 0x24a <__addsf3+0x28>
 2ea:	93 95       	inc	r25
 2ec:	88 0f       	add	r24, r24
 2ee:	08 f0       	brcs	.+2      	; 0x2f2 <__addsf3x+0xa2>
 2f0:	99 27       	eor	r25, r25
 2f2:	ee 0f       	add	r30, r30
 2f4:	97 95       	ror	r25
 2f6:	87 95       	ror	r24
 2f8:	08 95       	ret

000002fa <__divsf3>:
 2fa:	0e 94 91 01 	call	0x322	; 0x322 <__divsf3x>
 2fe:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_round>
 302:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__fp_pscB>
 306:	58 f0       	brcs	.+22     	; 0x31e <__divsf3+0x24>
 308:	0e 94 64 02 	call	0x4c8	; 0x4c8 <__fp_pscA>
 30c:	40 f0       	brcs	.+16     	; 0x31e <__divsf3+0x24>
 30e:	29 f4       	brne	.+10     	; 0x31a <__divsf3+0x20>
 310:	5f 3f       	cpi	r21, 0xFF	; 255
 312:	29 f0       	breq	.+10     	; 0x31e <__divsf3+0x24>
 314:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__fp_inf>
 318:	51 11       	cpse	r21, r1
 31a:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_szero>
 31e:	0c 94 61 02 	jmp	0x4c2	; 0x4c2 <__fp_nan>

00000322 <__divsf3x>:
 322:	0e 94 83 02 	call	0x506	; 0x506 <__fp_split3>
 326:	68 f3       	brcs	.-38     	; 0x302 <__divsf3+0x8>

00000328 <__divsf3_pse>:
 328:	99 23       	and	r25, r25
 32a:	b1 f3       	breq	.-20     	; 0x318 <__divsf3+0x1e>
 32c:	55 23       	and	r21, r21
 32e:	91 f3       	breq	.-28     	; 0x314 <__divsf3+0x1a>
 330:	95 1b       	sub	r25, r21
 332:	55 0b       	sbc	r21, r21
 334:	bb 27       	eor	r27, r27
 336:	aa 27       	eor	r26, r26
 338:	62 17       	cp	r22, r18
 33a:	73 07       	cpc	r23, r19
 33c:	84 07       	cpc	r24, r20
 33e:	38 f0       	brcs	.+14     	; 0x34e <__divsf3_pse+0x26>
 340:	9f 5f       	subi	r25, 0xFF	; 255
 342:	5f 4f       	sbci	r21, 0xFF	; 255
 344:	22 0f       	add	r18, r18
 346:	33 1f       	adc	r19, r19
 348:	44 1f       	adc	r20, r20
 34a:	aa 1f       	adc	r26, r26
 34c:	a9 f3       	breq	.-22     	; 0x338 <__divsf3_pse+0x10>
 34e:	35 d0       	rcall	.+106    	; 0x3ba <__divsf3_pse+0x92>
 350:	0e 2e       	mov	r0, r30
 352:	3a f0       	brmi	.+14     	; 0x362 <__divsf3_pse+0x3a>
 354:	e0 e8       	ldi	r30, 0x80	; 128
 356:	32 d0       	rcall	.+100    	; 0x3bc <__divsf3_pse+0x94>
 358:	91 50       	subi	r25, 0x01	; 1
 35a:	50 40       	sbci	r21, 0x00	; 0
 35c:	e6 95       	lsr	r30
 35e:	00 1c       	adc	r0, r0
 360:	ca f7       	brpl	.-14     	; 0x354 <__divsf3_pse+0x2c>
 362:	2b d0       	rcall	.+86     	; 0x3ba <__divsf3_pse+0x92>
 364:	fe 2f       	mov	r31, r30
 366:	29 d0       	rcall	.+82     	; 0x3ba <__divsf3_pse+0x92>
 368:	66 0f       	add	r22, r22
 36a:	77 1f       	adc	r23, r23
 36c:	88 1f       	adc	r24, r24
 36e:	bb 1f       	adc	r27, r27
 370:	26 17       	cp	r18, r22
 372:	37 07       	cpc	r19, r23
 374:	48 07       	cpc	r20, r24
 376:	ab 07       	cpc	r26, r27
 378:	b0 e8       	ldi	r27, 0x80	; 128
 37a:	09 f0       	breq	.+2      	; 0x37e <__divsf3_pse+0x56>
 37c:	bb 0b       	sbc	r27, r27
 37e:	80 2d       	mov	r24, r0
 380:	bf 01       	movw	r22, r30
 382:	ff 27       	eor	r31, r31
 384:	93 58       	subi	r25, 0x83	; 131
 386:	5f 4f       	sbci	r21, 0xFF	; 255
 388:	3a f0       	brmi	.+14     	; 0x398 <__divsf3_pse+0x70>
 38a:	9e 3f       	cpi	r25, 0xFE	; 254
 38c:	51 05       	cpc	r21, r1
 38e:	78 f0       	brcs	.+30     	; 0x3ae <__divsf3_pse+0x86>
 390:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__fp_inf>
 394:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_szero>
 398:	5f 3f       	cpi	r21, 0xFF	; 255
 39a:	e4 f3       	brlt	.-8      	; 0x394 <__divsf3_pse+0x6c>
 39c:	98 3e       	cpi	r25, 0xE8	; 232
 39e:	d4 f3       	brlt	.-12     	; 0x394 <__divsf3_pse+0x6c>
 3a0:	86 95       	lsr	r24
 3a2:	77 95       	ror	r23
 3a4:	67 95       	ror	r22
 3a6:	b7 95       	ror	r27
 3a8:	f7 95       	ror	r31
 3aa:	9f 5f       	subi	r25, 0xFF	; 255
 3ac:	c9 f7       	brne	.-14     	; 0x3a0 <__divsf3_pse+0x78>
 3ae:	88 0f       	add	r24, r24
 3b0:	91 1d       	adc	r25, r1
 3b2:	96 95       	lsr	r25
 3b4:	87 95       	ror	r24
 3b6:	97 f9       	bld	r25, 7
 3b8:	08 95       	ret
 3ba:	e1 e0       	ldi	r30, 0x01	; 1
 3bc:	66 0f       	add	r22, r22
 3be:	77 1f       	adc	r23, r23
 3c0:	88 1f       	adc	r24, r24
 3c2:	bb 1f       	adc	r27, r27
 3c4:	62 17       	cp	r22, r18
 3c6:	73 07       	cpc	r23, r19
 3c8:	84 07       	cpc	r24, r20
 3ca:	ba 07       	cpc	r27, r26
 3cc:	20 f0       	brcs	.+8      	; 0x3d6 <__divsf3_pse+0xae>
 3ce:	62 1b       	sub	r22, r18
 3d0:	73 0b       	sbc	r23, r19
 3d2:	84 0b       	sbc	r24, r20
 3d4:	ba 0b       	sbc	r27, r26
 3d6:	ee 1f       	adc	r30, r30
 3d8:	88 f7       	brcc	.-30     	; 0x3bc <__divsf3_pse+0x94>
 3da:	e0 95       	com	r30
 3dc:	08 95       	ret

000003de <__fixunssfsi>:
 3de:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_splitA>
 3e2:	88 f0       	brcs	.+34     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e4:	9f 57       	subi	r25, 0x7F	; 127
 3e6:	98 f0       	brcs	.+38     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e8:	b9 2f       	mov	r27, r25
 3ea:	99 27       	eor	r25, r25
 3ec:	b7 51       	subi	r27, 0x17	; 23
 3ee:	b0 f0       	brcs	.+44     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f0:	e1 f0       	breq	.+56     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f2:	66 0f       	add	r22, r22
 3f4:	77 1f       	adc	r23, r23
 3f6:	88 1f       	adc	r24, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	1a f0       	brmi	.+6      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fc:	ba 95       	dec	r27
 3fe:	c9 f7       	brne	.-14     	; 0x3f2 <__fixunssfsi+0x14>
 400:	14 c0       	rjmp	.+40     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 402:	b1 30       	cpi	r27, 0x01	; 1
 404:	91 f0       	breq	.+36     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 406:	0e 94 a5 02 	call	0x54a	; 0x54a <__fp_zero>
 40a:	b1 e0       	ldi	r27, 0x01	; 1
 40c:	08 95       	ret
 40e:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__fp_zero>
 412:	67 2f       	mov	r22, r23
 414:	78 2f       	mov	r23, r24
 416:	88 27       	eor	r24, r24
 418:	b8 5f       	subi	r27, 0xF8	; 248
 41a:	39 f0       	breq	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	b9 3f       	cpi	r27, 0xF9	; 249
 41e:	cc f3       	brlt	.-14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 420:	86 95       	lsr	r24
 422:	77 95       	ror	r23
 424:	67 95       	ror	r22
 426:	b3 95       	inc	r27
 428:	d9 f7       	brne	.-10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 42a:	3e f4       	brtc	.+14     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42c:	90 95       	com	r25
 42e:	80 95       	com	r24
 430:	70 95       	com	r23
 432:	61 95       	neg	r22
 434:	7f 4f       	sbci	r23, 0xFF	; 255
 436:	8f 4f       	sbci	r24, 0xFF	; 255
 438:	9f 4f       	sbci	r25, 0xFF	; 255
 43a:	08 95       	ret

0000043c <__floatunsisf>:
 43c:	e8 94       	clt
 43e:	09 c0       	rjmp	.+18     	; 0x452 <__floatsisf+0x12>

00000440 <__floatsisf>:
 440:	97 fb       	bst	r25, 7
 442:	3e f4       	brtc	.+14     	; 0x452 <__floatsisf+0x12>
 444:	90 95       	com	r25
 446:	80 95       	com	r24
 448:	70 95       	com	r23
 44a:	61 95       	neg	r22
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	99 23       	and	r25, r25
 454:	a9 f0       	breq	.+42     	; 0x480 <__floatsisf+0x40>
 456:	f9 2f       	mov	r31, r25
 458:	96 e9       	ldi	r25, 0x96	; 150
 45a:	bb 27       	eor	r27, r27
 45c:	93 95       	inc	r25
 45e:	f6 95       	lsr	r31
 460:	87 95       	ror	r24
 462:	77 95       	ror	r23
 464:	67 95       	ror	r22
 466:	b7 95       	ror	r27
 468:	f1 11       	cpse	r31, r1
 46a:	f8 cf       	rjmp	.-16     	; 0x45c <__floatsisf+0x1c>
 46c:	fa f4       	brpl	.+62     	; 0x4ac <__floatsisf+0x6c>
 46e:	bb 0f       	add	r27, r27
 470:	11 f4       	brne	.+4      	; 0x476 <__floatsisf+0x36>
 472:	60 ff       	sbrs	r22, 0
 474:	1b c0       	rjmp	.+54     	; 0x4ac <__floatsisf+0x6c>
 476:	6f 5f       	subi	r22, 0xFF	; 255
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	8f 4f       	sbci	r24, 0xFF	; 255
 47c:	9f 4f       	sbci	r25, 0xFF	; 255
 47e:	16 c0       	rjmp	.+44     	; 0x4ac <__floatsisf+0x6c>
 480:	88 23       	and	r24, r24
 482:	11 f0       	breq	.+4      	; 0x488 <__floatsisf+0x48>
 484:	96 e9       	ldi	r25, 0x96	; 150
 486:	11 c0       	rjmp	.+34     	; 0x4aa <__floatsisf+0x6a>
 488:	77 23       	and	r23, r23
 48a:	21 f0       	breq	.+8      	; 0x494 <__floatsisf+0x54>
 48c:	9e e8       	ldi	r25, 0x8E	; 142
 48e:	87 2f       	mov	r24, r23
 490:	76 2f       	mov	r23, r22
 492:	05 c0       	rjmp	.+10     	; 0x49e <__floatsisf+0x5e>
 494:	66 23       	and	r22, r22
 496:	71 f0       	breq	.+28     	; 0x4b4 <__floatsisf+0x74>
 498:	96 e8       	ldi	r25, 0x86	; 134
 49a:	86 2f       	mov	r24, r22
 49c:	70 e0       	ldi	r23, 0x00	; 0
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	2a f0       	brmi	.+10     	; 0x4ac <__floatsisf+0x6c>
 4a2:	9a 95       	dec	r25
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	da f7       	brpl	.-10     	; 0x4a2 <__floatsisf+0x62>
 4ac:	88 0f       	add	r24, r24
 4ae:	96 95       	lsr	r25
 4b0:	87 95       	ror	r24
 4b2:	97 f9       	bld	r25, 7
 4b4:	08 95       	ret

000004b6 <__fp_inf>:
 4b6:	97 f9       	bld	r25, 7
 4b8:	9f 67       	ori	r25, 0x7F	; 127
 4ba:	80 e8       	ldi	r24, 0x80	; 128
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	08 95       	ret

000004c2 <__fp_nan>:
 4c2:	9f ef       	ldi	r25, 0xFF	; 255
 4c4:	80 ec       	ldi	r24, 0xC0	; 192
 4c6:	08 95       	ret

000004c8 <__fp_pscA>:
 4c8:	00 24       	eor	r0, r0
 4ca:	0a 94       	dec	r0
 4cc:	16 16       	cp	r1, r22
 4ce:	17 06       	cpc	r1, r23
 4d0:	18 06       	cpc	r1, r24
 4d2:	09 06       	cpc	r0, r25
 4d4:	08 95       	ret

000004d6 <__fp_pscB>:
 4d6:	00 24       	eor	r0, r0
 4d8:	0a 94       	dec	r0
 4da:	12 16       	cp	r1, r18
 4dc:	13 06       	cpc	r1, r19
 4de:	14 06       	cpc	r1, r20
 4e0:	05 06       	cpc	r0, r21
 4e2:	08 95       	ret

000004e4 <__fp_round>:
 4e4:	09 2e       	mov	r0, r25
 4e6:	03 94       	inc	r0
 4e8:	00 0c       	add	r0, r0
 4ea:	11 f4       	brne	.+4      	; 0x4f0 <__fp_round+0xc>
 4ec:	88 23       	and	r24, r24
 4ee:	52 f0       	brmi	.+20     	; 0x504 <__fp_round+0x20>
 4f0:	bb 0f       	add	r27, r27
 4f2:	40 f4       	brcc	.+16     	; 0x504 <__fp_round+0x20>
 4f4:	bf 2b       	or	r27, r31
 4f6:	11 f4       	brne	.+4      	; 0x4fc <__fp_round+0x18>
 4f8:	60 ff       	sbrs	r22, 0
 4fa:	04 c0       	rjmp	.+8      	; 0x504 <__fp_round+0x20>
 4fc:	6f 5f       	subi	r22, 0xFF	; 255
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	08 95       	ret

00000506 <__fp_split3>:
 506:	57 fd       	sbrc	r21, 7
 508:	90 58       	subi	r25, 0x80	; 128
 50a:	44 0f       	add	r20, r20
 50c:	55 1f       	adc	r21, r21
 50e:	59 f0       	breq	.+22     	; 0x526 <__fp_splitA+0x10>
 510:	5f 3f       	cpi	r21, 0xFF	; 255
 512:	71 f0       	breq	.+28     	; 0x530 <__fp_splitA+0x1a>
 514:	47 95       	ror	r20

00000516 <__fp_splitA>:
 516:	88 0f       	add	r24, r24
 518:	97 fb       	bst	r25, 7
 51a:	99 1f       	adc	r25, r25
 51c:	61 f0       	breq	.+24     	; 0x536 <__fp_splitA+0x20>
 51e:	9f 3f       	cpi	r25, 0xFF	; 255
 520:	79 f0       	breq	.+30     	; 0x540 <__fp_splitA+0x2a>
 522:	87 95       	ror	r24
 524:	08 95       	ret
 526:	12 16       	cp	r1, r18
 528:	13 06       	cpc	r1, r19
 52a:	14 06       	cpc	r1, r20
 52c:	55 1f       	adc	r21, r21
 52e:	f2 cf       	rjmp	.-28     	; 0x514 <__fp_split3+0xe>
 530:	46 95       	lsr	r20
 532:	f1 df       	rcall	.-30     	; 0x516 <__fp_splitA>
 534:	08 c0       	rjmp	.+16     	; 0x546 <__fp_splitA+0x30>
 536:	16 16       	cp	r1, r22
 538:	17 06       	cpc	r1, r23
 53a:	18 06       	cpc	r1, r24
 53c:	99 1f       	adc	r25, r25
 53e:	f1 cf       	rjmp	.-30     	; 0x522 <__fp_splitA+0xc>
 540:	86 95       	lsr	r24
 542:	71 05       	cpc	r23, r1
 544:	61 05       	cpc	r22, r1
 546:	08 94       	sec
 548:	08 95       	ret

0000054a <__fp_zero>:
 54a:	e8 94       	clt

0000054c <__fp_szero>:
 54c:	bb 27       	eor	r27, r27
 54e:	66 27       	eor	r22, r22
 550:	77 27       	eor	r23, r23
 552:	cb 01       	movw	r24, r22
 554:	97 f9       	bld	r25, 7
 556:	08 95       	ret

00000558 <_exit>:
 558:	f8 94       	cli

0000055a <__stop_program>:
 55a:	ff cf       	rjmp	.-2      	; 0x55a <__stop_program>
