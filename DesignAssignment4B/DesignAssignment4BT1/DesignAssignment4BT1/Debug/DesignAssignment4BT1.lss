
DesignAssignment4BT1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000706  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000692  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000706  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000706  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000738  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000778  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3e  00000000  00000000  000007a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ad  00000000  00000000  000013e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041f  00000000  00000000  00001d93  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  000021b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004db  00000000  00000000  00002228  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000311  00000000  00000000  00002703  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00002a14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a4 30       	cpi	r26, 0x04	; 4
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <main>
  d4:	0c 94 47 03 	jmp	0x68e	; 0x68e <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <adc_init>:
	return 0;
}

//adc initialize function
void adc_init(void){
	ADMUX =  (0<<REFS1) | (1<<REFS0) | (1<<ADLAR) | (0<<MUX2)  | (0<<MUX1)  | (0<<MUX0);
  dc:	80 e6       	ldi	r24, 0x60	; 96
  de:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = (1<<ADEN)  | (0<<ADSC)  | (0<<ADATE) | (0<<ADIF)  | (0<<ADIE)  | (1<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
  e2:	85 e8       	ldi	r24, 0x85	; 133
  e4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
  e8:	08 95       	ret

000000ea <read_adc>:
}

//read adc function
void read_adc(void){
  ea:	bf 92       	push	r11
  ec:	cf 92       	push	r12
  ee:	df 92       	push	r13
  f0:	ef 92       	push	r14
  f2:	ff 92       	push	r15
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
	unsigned char i = 10;		   	 //variable for sample amounts
	adc_value = 0;			       	 //initialize adc_value
  fc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 100:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 104:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
 108:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
 10c:	0f 2e       	mov	r0, r31
 10e:	fa e0       	ldi	r31, 0x0A	; 10
 110:	bf 2e       	mov	r11, r31
 112:	f0 2d       	mov	r31, r0
	while(i--)
	{
		ADCSRA |= (1<<ADSC);	     //enable Start Conversion
 114:	ca e7       	ldi	r28, 0x7A	; 122
 116:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC));   //wait until enable & start conversion
		adc_value += ADC;            //PC0 value added & stored into adc_value
 118:	08 e7       	ldi	r16, 0x78	; 120
 11a:	10 e0       	ldi	r17, 0x00	; 0
void read_adc(void){
	unsigned char i = 10;		   	 //variable for sample amounts
	adc_value = 0;			       	 //initialize adc_value
	while(i--)
	{
		ADCSRA |= (1<<ADSC);	     //enable Start Conversion
 11c:	88 81       	ld	r24, Y
 11e:	80 64       	ori	r24, 0x40	; 64
 120:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC));   //wait until enable & start conversion
 122:	88 81       	ld	r24, Y
 124:	86 fd       	sbrc	r24, 6
 126:	fd cf       	rjmp	.-6      	; 0x122 <read_adc+0x38>
		adc_value += ADC;            //PC0 value added & stored into adc_value
 128:	f8 01       	movw	r30, r16
 12a:	60 81       	ld	r22, Z
 12c:	71 81       	ldd	r23, Z+1	; 0x01
 12e:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <_edata>
 132:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <_edata+0x1>
 136:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <_edata+0x2>
 13a:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <_edata+0x3>
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 90 02 	call	0x520	; 0x520 <__floatunsisf>
 146:	a7 01       	movw	r20, r14
 148:	96 01       	movw	r18, r12
 14a:	0e 94 ad 01 	call	0x35a	; 0x35a <__addsf3>
 14e:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 152:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 156:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 15a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
 15e:	ba 94       	dec	r11

//read adc function
void read_adc(void){
	unsigned char i = 10;		   	 //variable for sample amounts
	adc_value = 0;			       	 //initialize adc_value
	while(i--)
 160:	b1 10       	cpse	r11, r1
 162:	dc cf       	rjmp	.-72     	; 0x11c <read_adc+0x32>
	{
		ADCSRA |= (1<<ADSC);	     //enable Start Conversion
		while(ADCSRA & (1<<ADSC));   //wait until enable & start conversion
		adc_value += ADC;            //PC0 value added & stored into adc_value
	}
	adc_value = adc_value/10;	     //average of values
 164:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 168:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 16c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 170:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e2       	ldi	r20, 0x20	; 32
 17a:	51 e4       	ldi	r21, 0x41	; 65
 17c:	0e 94 1e 02 	call	0x43c	; 0x43c <__divsf3>
 180:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 184:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 188:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 18c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
}
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	1f 91       	pop	r17
 196:	0f 91       	pop	r16
 198:	ff 90       	pop	r15
 19a:	ef 90       	pop	r14
 19c:	df 90       	pop	r13
 19e:	cf 90       	pop	r12
 1a0:	bf 90       	pop	r11
 1a2:	08 95       	ret

000001a4 <main>:
void adc_init(void);
void read_adc(void);

//main function 
int main(void){
	adc_init();//initialize ADC
 1a4:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_init>
	PORTC |=  (1<<0);//pull Up Resistor Activated PC0
 1a8:	40 9a       	sbi	0x08, 0	; 8
	DDRB = (1<<1);//output PB1
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	84 b9       	out	0x04, r24	; 4
	DDRD = 0x0F;//outputs PD3, PD2, PD1, PD0
 1ae:	8f e0       	ldi	r24, 0x0F	; 15
 1b0:	8a b9       	out	0x0a, r24	; 10
	
	
	//configuration of timer1
	ICR1 = 4999;  //freq = 50Hz, period = 20ms
 1b2:	87 e8       	ldi	r24, 0x87	; 135
 1b4:	93 e1       	ldi	r25, 0x13	; 19
 1b6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 1ba:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	TCCR1A |= (1<<COM1A1)|(1<<COM1B1);
 1be:	e0 e8       	ldi	r30, 0x80	; 128
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	80 6a       	ori	r24, 0xA0	; 160
 1c6:	80 83       	st	Z, r24
	TCCR1A |= (1<<WGM11);//CTC Mode
 1c8:	80 81       	ld	r24, Z
 1ca:	82 60       	ori	r24, 0x02	; 2
 1cc:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12)|(1<<WGM13);//CTC Mode
 1ce:	e1 e8       	ldi	r30, 0x81	; 129
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	88 61       	ori	r24, 0x18	; 24
 1d6:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS10) |(1<<CS11);//prescaler 64
 1d8:	80 81       	ld	r24, Z
 1da:	83 60       	ori	r24, 0x03	; 3
 1dc:	80 83       	st	Z, r24
	while (1){
		read_adc();//call Read function
		_delay_ms(50);
		
		//stepper motor configurations
		PORTD = 0x66;
 1de:	06 e6       	ldi	r16, 0x66	; 102
		_delay_ms(50);
		
		PORTD = 0xCC;
 1e0:	1c ec       	ldi	r17, 0xCC	; 204
		_delay_ms(50);
		
		PORTD = 0x99;
 1e2:	d9 e9       	ldi	r29, 0x99	; 153
		_delay_ms(50);
		
		PORTD = 0x33;
 1e4:	c3 e3       	ldi	r28, 0x33	; 51
	TCCR1A |= (1<<WGM11);//CTC Mode
	TCCR1B |= (1<<WGM12)|(1<<WGM13);//CTC Mode
	TCCR1B |= (1<<CS10) |(1<<CS11);//prescaler 64
	
	while (1){
		read_adc();//call Read function
 1e6:	0e 94 75 00 	call	0xea	; 0xea <read_adc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ea:	2f ef       	ldi	r18, 0xFF	; 255
 1ec:	80 e7       	ldi	r24, 0x70	; 112
 1ee:	92 e0       	ldi	r25, 0x02	; 2
 1f0:	21 50       	subi	r18, 0x01	; 1
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x4c>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0x56>
 1fa:	00 00       	nop
		_delay_ms(50);
		
		//stepper motor configurations
		PORTD = 0x66;
 1fc:	0b b9       	out	0x0b, r16	; 11
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	80 e7       	ldi	r24, 0x70	; 112
 202:	92 e0       	ldi	r25, 0x02	; 2
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <main+0x60>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <main+0x6a>
 20e:	00 00       	nop
		_delay_ms(50);
		
		PORTD = 0xCC;
 210:	1b b9       	out	0x0b, r17	; 11
 212:	2f ef       	ldi	r18, 0xFF	; 255
 214:	80 e7       	ldi	r24, 0x70	; 112
 216:	92 e0       	ldi	r25, 0x02	; 2
 218:	21 50       	subi	r18, 0x01	; 1
 21a:	80 40       	sbci	r24, 0x00	; 0
 21c:	90 40       	sbci	r25, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <main+0x74>
 220:	00 c0       	rjmp	.+0      	; 0x222 <main+0x7e>
 222:	00 00       	nop
		_delay_ms(50);
		
		PORTD = 0x99;
 224:	db b9       	out	0x0b, r29	; 11
 226:	2f ef       	ldi	r18, 0xFF	; 255
 228:	80 e7       	ldi	r24, 0x70	; 112
 22a:	92 e0       	ldi	r25, 0x02	; 2
 22c:	21 50       	subi	r18, 0x01	; 1
 22e:	80 40       	sbci	r24, 0x00	; 0
 230:	90 40       	sbci	r25, 0x00	; 0
 232:	e1 f7       	brne	.-8      	; 0x22c <main+0x88>
 234:	00 c0       	rjmp	.+0      	; 0x236 <main+0x92>
 236:	00 00       	nop
		_delay_ms(50);
		
		PORTD = 0x33;
 238:	cb b9       	out	0x0b, r28	; 11
 23a:	2f ef       	ldi	r18, 0xFF	; 255
 23c:	80 e7       	ldi	r24, 0x70	; 112
 23e:	92 e0       	ldi	r25, 0x02	; 2
 240:	21 50       	subi	r18, 0x01	; 1
 242:	80 40       	sbci	r24, 0x00	; 0
 244:	90 40       	sbci	r25, 0x00	; 0
 246:	e1 f7       	brne	.-8      	; 0x240 <main+0x9c>
 248:	00 c0       	rjmp	.+0      	; 0x24a <main+0xa6>
 24a:	00 00       	nop
		_delay_ms(50);
		
		//PWM at 95% to max
		if ((adc_value >= 973) && (adc_value < 1024 )){
 24c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 250:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 254:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 258:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 25c:	20 e0       	ldi	r18, 0x00	; 0
 25e:	30 e4       	ldi	r19, 0x40	; 64
 260:	43 e7       	ldi	r20, 0x73	; 115
 262:	54 e4       	ldi	r21, 0x44	; 68
 264:	0e 94 42 03 	call	0x684	; 0x684 <__gesf2>
 268:	88 23       	and	r24, r24
 26a:	bc f0       	brlt	.+46     	; 0x29a <main+0xf6>
 26c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 270:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 274:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 278:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 27c:	20 e0       	ldi	r18, 0x00	; 0
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	40 e8       	ldi	r20, 0x80	; 128
 282:	54 e4       	ldi	r21, 0x44	; 68
 284:	0e 94 19 02 	call	0x432	; 0x432 <__cmpsf2>
 288:	88 23       	and	r24, r24
 28a:	3c f4       	brge	.+14     	; 0x29a <main+0xf6>
 28c:	8f e3       	ldi	r24, 0x3F	; 63
 28e:	9c e9       	ldi	r25, 0x9C	; 156
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <main+0xec>
 294:	00 c0       	rjmp	.+0      	; 0x296 <main+0xf2>
 296:	00 00       	nop
 298:	a6 cf       	rjmp	.-180    	; 0x1e6 <main+0x42>
			_delay_ms(10);//create small delay
		}
		//decreasing PWM As resistor val decreases
		else if ((adc_value < 972) && (adc_value >= 768)){
 29a:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 29e:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 2a2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 2a6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 2aa:	20 e0       	ldi	r18, 0x00	; 0
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	43 e7       	ldi	r20, 0x73	; 115
 2b0:	54 e4       	ldi	r21, 0x44	; 68
 2b2:	0e 94 19 02 	call	0x432	; 0x432 <__cmpsf2>
 2b6:	88 23       	and	r24, r24
 2b8:	d4 f4       	brge	.+52     	; 0x2ee <main+0x14a>
 2ba:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 2be:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 2c2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 2c6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 2ca:	20 e0       	ldi	r18, 0x00	; 0
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	40 e4       	ldi	r20, 0x40	; 64
 2d0:	54 e4       	ldi	r21, 0x44	; 68
 2d2:	0e 94 42 03 	call	0x684	; 0x684 <__gesf2>
 2d6:	88 23       	and	r24, r24
 2d8:	54 f0       	brlt	.+20     	; 0x2ee <main+0x14a>
 2da:	9f ef       	ldi	r25, 0xFF	; 255
 2dc:	20 e7       	ldi	r18, 0x70	; 112
 2de:	82 e0       	ldi	r24, 0x02	; 2
 2e0:	91 50       	subi	r25, 0x01	; 1
 2e2:	20 40       	sbci	r18, 0x00	; 0
 2e4:	80 40       	sbci	r24, 0x00	; 0
 2e6:	e1 f7       	brne	.-8      	; 0x2e0 <main+0x13c>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <main+0x146>
 2ea:	00 00       	nop
 2ec:	7c cf       	rjmp	.-264    	; 0x1e6 <main+0x42>
			_delay_ms(50);  //create delay
		}
		//decreasing PWM As resistor value decreases
		else if ((adc_value < 767) && (adc_value >= 51)){
 2ee:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 2f2:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 2f6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 2fa:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 2fe:	20 e0       	ldi	r18, 0x00	; 0
 300:	30 ec       	ldi	r19, 0xC0	; 192
 302:	4f e3       	ldi	r20, 0x3F	; 63
 304:	54 e4       	ldi	r21, 0x44	; 68
 306:	0e 94 19 02 	call	0x432	; 0x432 <__cmpsf2>
 30a:	88 23       	and	r24, r24
 30c:	d4 f4       	brge	.+52     	; 0x342 <main+0x19e>
 30e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 312:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 316:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 31a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 31e:	20 e0       	ldi	r18, 0x00	; 0
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	4c e4       	ldi	r20, 0x4C	; 76
 324:	52 e4       	ldi	r21, 0x42	; 66
 326:	0e 94 42 03 	call	0x684	; 0x684 <__gesf2>
 32a:	88 23       	and	r24, r24
 32c:	54 f0       	brlt	.+20     	; 0x342 <main+0x19e>
 32e:	9f ef       	ldi	r25, 0xFF	; 255
 330:	21 ee       	ldi	r18, 0xE1	; 225
 332:	84 e0       	ldi	r24, 0x04	; 4
 334:	91 50       	subi	r25, 0x01	; 1
 336:	20 40       	sbci	r18, 0x00	; 0
 338:	80 40       	sbci	r24, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <main+0x190>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x19a>
 33e:	00 00       	nop
 340:	52 cf       	rjmp	.-348    	; 0x1e6 <main+0x42>
			_delay_ms(100); //create delay
		}
		//PWM is 0% If Resistor Value < 5%
		else{
			PORTD = 0x00;
 342:	1b b8       	out	0x0b, r1	; 11
 344:	9f ef       	ldi	r25, 0xFF	; 255
 346:	21 ee       	ldi	r18, 0xE1	; 225
 348:	84 e0       	ldi	r24, 0x04	; 4
 34a:	91 50       	subi	r25, 0x01	; 1
 34c:	20 40       	sbci	r18, 0x00	; 0
 34e:	80 40       	sbci	r24, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <main+0x1a6>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x1b0>
 354:	00 00       	nop
 356:	47 cf       	rjmp	.-370    	; 0x1e6 <main+0x42>

00000358 <__subsf3>:
 358:	50 58       	subi	r21, 0x80	; 128

0000035a <__addsf3>:
 35a:	bb 27       	eor	r27, r27
 35c:	aa 27       	eor	r26, r26
 35e:	0e 94 c4 01 	call	0x388	; 0x388 <__addsf3x>
 362:	0c 94 08 03 	jmp	0x610	; 0x610 <__fp_round>
 366:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_pscA>
 36a:	38 f0       	brcs	.+14     	; 0x37a <__addsf3+0x20>
 36c:	0e 94 01 03 	call	0x602	; 0x602 <__fp_pscB>
 370:	20 f0       	brcs	.+8      	; 0x37a <__addsf3+0x20>
 372:	39 f4       	brne	.+14     	; 0x382 <__addsf3+0x28>
 374:	9f 3f       	cpi	r25, 0xFF	; 255
 376:	19 f4       	brne	.+6      	; 0x37e <__addsf3+0x24>
 378:	26 f4       	brtc	.+8      	; 0x382 <__addsf3+0x28>
 37a:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_nan>
 37e:	0e f4       	brtc	.+2      	; 0x382 <__addsf3+0x28>
 380:	e0 95       	com	r30
 382:	e7 fb       	bst	r30, 7
 384:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_inf>

00000388 <__addsf3x>:
 388:	e9 2f       	mov	r30, r25
 38a:	0e 94 19 03 	call	0x632	; 0x632 <__fp_split3>
 38e:	58 f3       	brcs	.-42     	; 0x366 <__addsf3+0xc>
 390:	ba 17       	cp	r27, r26
 392:	62 07       	cpc	r22, r18
 394:	73 07       	cpc	r23, r19
 396:	84 07       	cpc	r24, r20
 398:	95 07       	cpc	r25, r21
 39a:	20 f0       	brcs	.+8      	; 0x3a4 <__addsf3x+0x1c>
 39c:	79 f4       	brne	.+30     	; 0x3bc <__addsf3x+0x34>
 39e:	a6 f5       	brtc	.+104    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3a0:	0c 94 3b 03 	jmp	0x676	; 0x676 <__fp_zero>
 3a4:	0e f4       	brtc	.+2      	; 0x3a8 <__addsf3x+0x20>
 3a6:	e0 95       	com	r30
 3a8:	0b 2e       	mov	r0, r27
 3aa:	ba 2f       	mov	r27, r26
 3ac:	a0 2d       	mov	r26, r0
 3ae:	0b 01       	movw	r0, r22
 3b0:	b9 01       	movw	r22, r18
 3b2:	90 01       	movw	r18, r0
 3b4:	0c 01       	movw	r0, r24
 3b6:	ca 01       	movw	r24, r20
 3b8:	a0 01       	movw	r20, r0
 3ba:	11 24       	eor	r1, r1
 3bc:	ff 27       	eor	r31, r31
 3be:	59 1b       	sub	r21, r25
 3c0:	99 f0       	breq	.+38     	; 0x3e8 <__addsf3x+0x60>
 3c2:	59 3f       	cpi	r21, 0xF9	; 249
 3c4:	50 f4       	brcc	.+20     	; 0x3da <__addsf3x+0x52>
 3c6:	50 3e       	cpi	r21, 0xE0	; 224
 3c8:	68 f1       	brcs	.+90     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3ca:	1a 16       	cp	r1, r26
 3cc:	f0 40       	sbci	r31, 0x00	; 0
 3ce:	a2 2f       	mov	r26, r18
 3d0:	23 2f       	mov	r18, r19
 3d2:	34 2f       	mov	r19, r20
 3d4:	44 27       	eor	r20, r20
 3d6:	58 5f       	subi	r21, 0xF8	; 248
 3d8:	f3 cf       	rjmp	.-26     	; 0x3c0 <__addsf3x+0x38>
 3da:	46 95       	lsr	r20
 3dc:	37 95       	ror	r19
 3de:	27 95       	ror	r18
 3e0:	a7 95       	ror	r26
 3e2:	f0 40       	sbci	r31, 0x00	; 0
 3e4:	53 95       	inc	r21
 3e6:	c9 f7       	brne	.-14     	; 0x3da <__addsf3x+0x52>
 3e8:	7e f4       	brtc	.+30     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ea:	1f 16       	cp	r1, r31
 3ec:	ba 0b       	sbc	r27, r26
 3ee:	62 0b       	sbc	r22, r18
 3f0:	73 0b       	sbc	r23, r19
 3f2:	84 0b       	sbc	r24, r20
 3f4:	ba f0       	brmi	.+46     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 3f6:	91 50       	subi	r25, 0x01	; 1
 3f8:	a1 f0       	breq	.+40     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3fa:	ff 0f       	add	r31, r31
 3fc:	bb 1f       	adc	r27, r27
 3fe:	66 1f       	adc	r22, r22
 400:	77 1f       	adc	r23, r23
 402:	88 1f       	adc	r24, r24
 404:	c2 f7       	brpl	.-16     	; 0x3f6 <__addsf3x+0x6e>
 406:	0e c0       	rjmp	.+28     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 408:	ba 0f       	add	r27, r26
 40a:	62 1f       	adc	r22, r18
 40c:	73 1f       	adc	r23, r19
 40e:	84 1f       	adc	r24, r20
 410:	48 f4       	brcc	.+18     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 412:	87 95       	ror	r24
 414:	77 95       	ror	r23
 416:	67 95       	ror	r22
 418:	b7 95       	ror	r27
 41a:	f7 95       	ror	r31
 41c:	9e 3f       	cpi	r25, 0xFE	; 254
 41e:	08 f0       	brcs	.+2      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 420:	b0 cf       	rjmp	.-160    	; 0x382 <__addsf3+0x28>
 422:	93 95       	inc	r25
 424:	88 0f       	add	r24, r24
 426:	08 f0       	brcs	.+2      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 428:	99 27       	eor	r25, r25
 42a:	ee 0f       	add	r30, r30
 42c:	97 95       	ror	r25
 42e:	87 95       	ror	r24
 430:	08 95       	ret

00000432 <__cmpsf2>:
 432:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_cmp>
 436:	08 f4       	brcc	.+2      	; 0x43a <__cmpsf2+0x8>
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	08 95       	ret

0000043c <__divsf3>:
 43c:	0e 94 32 02 	call	0x464	; 0x464 <__divsf3x>
 440:	0c 94 08 03 	jmp	0x610	; 0x610 <__fp_round>
 444:	0e 94 01 03 	call	0x602	; 0x602 <__fp_pscB>
 448:	58 f0       	brcs	.+22     	; 0x460 <__divsf3+0x24>
 44a:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_pscA>
 44e:	40 f0       	brcs	.+16     	; 0x460 <__divsf3+0x24>
 450:	29 f4       	brne	.+10     	; 0x45c <__divsf3+0x20>
 452:	5f 3f       	cpi	r21, 0xFF	; 255
 454:	29 f0       	breq	.+10     	; 0x460 <__divsf3+0x24>
 456:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_inf>
 45a:	51 11       	cpse	r21, r1
 45c:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_szero>
 460:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_nan>

00000464 <__divsf3x>:
 464:	0e 94 19 03 	call	0x632	; 0x632 <__fp_split3>
 468:	68 f3       	brcs	.-38     	; 0x444 <__divsf3+0x8>

0000046a <__divsf3_pse>:
 46a:	99 23       	and	r25, r25
 46c:	b1 f3       	breq	.-20     	; 0x45a <__divsf3+0x1e>
 46e:	55 23       	and	r21, r21
 470:	91 f3       	breq	.-28     	; 0x456 <__divsf3+0x1a>
 472:	95 1b       	sub	r25, r21
 474:	55 0b       	sbc	r21, r21
 476:	bb 27       	eor	r27, r27
 478:	aa 27       	eor	r26, r26
 47a:	62 17       	cp	r22, r18
 47c:	73 07       	cpc	r23, r19
 47e:	84 07       	cpc	r24, r20
 480:	38 f0       	brcs	.+14     	; 0x490 <__divsf3_pse+0x26>
 482:	9f 5f       	subi	r25, 0xFF	; 255
 484:	5f 4f       	sbci	r21, 0xFF	; 255
 486:	22 0f       	add	r18, r18
 488:	33 1f       	adc	r19, r19
 48a:	44 1f       	adc	r20, r20
 48c:	aa 1f       	adc	r26, r26
 48e:	a9 f3       	breq	.-22     	; 0x47a <__divsf3_pse+0x10>
 490:	35 d0       	rcall	.+106    	; 0x4fc <__divsf3_pse+0x92>
 492:	0e 2e       	mov	r0, r30
 494:	3a f0       	brmi	.+14     	; 0x4a4 <__divsf3_pse+0x3a>
 496:	e0 e8       	ldi	r30, 0x80	; 128
 498:	32 d0       	rcall	.+100    	; 0x4fe <__divsf3_pse+0x94>
 49a:	91 50       	subi	r25, 0x01	; 1
 49c:	50 40       	sbci	r21, 0x00	; 0
 49e:	e6 95       	lsr	r30
 4a0:	00 1c       	adc	r0, r0
 4a2:	ca f7       	brpl	.-14     	; 0x496 <__divsf3_pse+0x2c>
 4a4:	2b d0       	rcall	.+86     	; 0x4fc <__divsf3_pse+0x92>
 4a6:	fe 2f       	mov	r31, r30
 4a8:	29 d0       	rcall	.+82     	; 0x4fc <__divsf3_pse+0x92>
 4aa:	66 0f       	add	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	bb 1f       	adc	r27, r27
 4b2:	26 17       	cp	r18, r22
 4b4:	37 07       	cpc	r19, r23
 4b6:	48 07       	cpc	r20, r24
 4b8:	ab 07       	cpc	r26, r27
 4ba:	b0 e8       	ldi	r27, 0x80	; 128
 4bc:	09 f0       	breq	.+2      	; 0x4c0 <__divsf3_pse+0x56>
 4be:	bb 0b       	sbc	r27, r27
 4c0:	80 2d       	mov	r24, r0
 4c2:	bf 01       	movw	r22, r30
 4c4:	ff 27       	eor	r31, r31
 4c6:	93 58       	subi	r25, 0x83	; 131
 4c8:	5f 4f       	sbci	r21, 0xFF	; 255
 4ca:	3a f0       	brmi	.+14     	; 0x4da <__divsf3_pse+0x70>
 4cc:	9e 3f       	cpi	r25, 0xFE	; 254
 4ce:	51 05       	cpc	r21, r1
 4d0:	78 f0       	brcs	.+30     	; 0x4f0 <__divsf3_pse+0x86>
 4d2:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_inf>
 4d6:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_szero>
 4da:	5f 3f       	cpi	r21, 0xFF	; 255
 4dc:	e4 f3       	brlt	.-8      	; 0x4d6 <__divsf3_pse+0x6c>
 4de:	98 3e       	cpi	r25, 0xE8	; 232
 4e0:	d4 f3       	brlt	.-12     	; 0x4d6 <__divsf3_pse+0x6c>
 4e2:	86 95       	lsr	r24
 4e4:	77 95       	ror	r23
 4e6:	67 95       	ror	r22
 4e8:	b7 95       	ror	r27
 4ea:	f7 95       	ror	r31
 4ec:	9f 5f       	subi	r25, 0xFF	; 255
 4ee:	c9 f7       	brne	.-14     	; 0x4e2 <__divsf3_pse+0x78>
 4f0:	88 0f       	add	r24, r24
 4f2:	91 1d       	adc	r25, r1
 4f4:	96 95       	lsr	r25
 4f6:	87 95       	ror	r24
 4f8:	97 f9       	bld	r25, 7
 4fa:	08 95       	ret
 4fc:	e1 e0       	ldi	r30, 0x01	; 1
 4fe:	66 0f       	add	r22, r22
 500:	77 1f       	adc	r23, r23
 502:	88 1f       	adc	r24, r24
 504:	bb 1f       	adc	r27, r27
 506:	62 17       	cp	r22, r18
 508:	73 07       	cpc	r23, r19
 50a:	84 07       	cpc	r24, r20
 50c:	ba 07       	cpc	r27, r26
 50e:	20 f0       	brcs	.+8      	; 0x518 <__divsf3_pse+0xae>
 510:	62 1b       	sub	r22, r18
 512:	73 0b       	sbc	r23, r19
 514:	84 0b       	sbc	r24, r20
 516:	ba 0b       	sbc	r27, r26
 518:	ee 1f       	adc	r30, r30
 51a:	88 f7       	brcc	.-30     	; 0x4fe <__divsf3_pse+0x94>
 51c:	e0 95       	com	r30
 51e:	08 95       	ret

00000520 <__floatunsisf>:
 520:	e8 94       	clt
 522:	09 c0       	rjmp	.+18     	; 0x536 <__floatsisf+0x12>

00000524 <__floatsisf>:
 524:	97 fb       	bst	r25, 7
 526:	3e f4       	brtc	.+14     	; 0x536 <__floatsisf+0x12>
 528:	90 95       	com	r25
 52a:	80 95       	com	r24
 52c:	70 95       	com	r23
 52e:	61 95       	neg	r22
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	99 23       	and	r25, r25
 538:	a9 f0       	breq	.+42     	; 0x564 <__floatsisf+0x40>
 53a:	f9 2f       	mov	r31, r25
 53c:	96 e9       	ldi	r25, 0x96	; 150
 53e:	bb 27       	eor	r27, r27
 540:	93 95       	inc	r25
 542:	f6 95       	lsr	r31
 544:	87 95       	ror	r24
 546:	77 95       	ror	r23
 548:	67 95       	ror	r22
 54a:	b7 95       	ror	r27
 54c:	f1 11       	cpse	r31, r1
 54e:	f8 cf       	rjmp	.-16     	; 0x540 <__floatsisf+0x1c>
 550:	fa f4       	brpl	.+62     	; 0x590 <__floatsisf+0x6c>
 552:	bb 0f       	add	r27, r27
 554:	11 f4       	brne	.+4      	; 0x55a <__floatsisf+0x36>
 556:	60 ff       	sbrs	r22, 0
 558:	1b c0       	rjmp	.+54     	; 0x590 <__floatsisf+0x6c>
 55a:	6f 5f       	subi	r22, 0xFF	; 255
 55c:	7f 4f       	sbci	r23, 0xFF	; 255
 55e:	8f 4f       	sbci	r24, 0xFF	; 255
 560:	9f 4f       	sbci	r25, 0xFF	; 255
 562:	16 c0       	rjmp	.+44     	; 0x590 <__floatsisf+0x6c>
 564:	88 23       	and	r24, r24
 566:	11 f0       	breq	.+4      	; 0x56c <__floatsisf+0x48>
 568:	96 e9       	ldi	r25, 0x96	; 150
 56a:	11 c0       	rjmp	.+34     	; 0x58e <__floatsisf+0x6a>
 56c:	77 23       	and	r23, r23
 56e:	21 f0       	breq	.+8      	; 0x578 <__floatsisf+0x54>
 570:	9e e8       	ldi	r25, 0x8E	; 142
 572:	87 2f       	mov	r24, r23
 574:	76 2f       	mov	r23, r22
 576:	05 c0       	rjmp	.+10     	; 0x582 <__floatsisf+0x5e>
 578:	66 23       	and	r22, r22
 57a:	71 f0       	breq	.+28     	; 0x598 <__floatsisf+0x74>
 57c:	96 e8       	ldi	r25, 0x86	; 134
 57e:	86 2f       	mov	r24, r22
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	60 e0       	ldi	r22, 0x00	; 0
 584:	2a f0       	brmi	.+10     	; 0x590 <__floatsisf+0x6c>
 586:	9a 95       	dec	r25
 588:	66 0f       	add	r22, r22
 58a:	77 1f       	adc	r23, r23
 58c:	88 1f       	adc	r24, r24
 58e:	da f7       	brpl	.-10     	; 0x586 <__floatsisf+0x62>
 590:	88 0f       	add	r24, r24
 592:	96 95       	lsr	r25
 594:	87 95       	ror	r24
 596:	97 f9       	bld	r25, 7
 598:	08 95       	ret

0000059a <__fp_cmp>:
 59a:	99 0f       	add	r25, r25
 59c:	00 08       	sbc	r0, r0
 59e:	55 0f       	add	r21, r21
 5a0:	aa 0b       	sbc	r26, r26
 5a2:	e0 e8       	ldi	r30, 0x80	; 128
 5a4:	fe ef       	ldi	r31, 0xFE	; 254
 5a6:	16 16       	cp	r1, r22
 5a8:	17 06       	cpc	r1, r23
 5aa:	e8 07       	cpc	r30, r24
 5ac:	f9 07       	cpc	r31, r25
 5ae:	c0 f0       	brcs	.+48     	; 0x5e0 <__fp_cmp+0x46>
 5b0:	12 16       	cp	r1, r18
 5b2:	13 06       	cpc	r1, r19
 5b4:	e4 07       	cpc	r30, r20
 5b6:	f5 07       	cpc	r31, r21
 5b8:	98 f0       	brcs	.+38     	; 0x5e0 <__fp_cmp+0x46>
 5ba:	62 1b       	sub	r22, r18
 5bc:	73 0b       	sbc	r23, r19
 5be:	84 0b       	sbc	r24, r20
 5c0:	95 0b       	sbc	r25, r21
 5c2:	39 f4       	brne	.+14     	; 0x5d2 <__fp_cmp+0x38>
 5c4:	0a 26       	eor	r0, r26
 5c6:	61 f0       	breq	.+24     	; 0x5e0 <__fp_cmp+0x46>
 5c8:	23 2b       	or	r18, r19
 5ca:	24 2b       	or	r18, r20
 5cc:	25 2b       	or	r18, r21
 5ce:	21 f4       	brne	.+8      	; 0x5d8 <__fp_cmp+0x3e>
 5d0:	08 95       	ret
 5d2:	0a 26       	eor	r0, r26
 5d4:	09 f4       	brne	.+2      	; 0x5d8 <__fp_cmp+0x3e>
 5d6:	a1 40       	sbci	r26, 0x01	; 1
 5d8:	a6 95       	lsr	r26
 5da:	8f ef       	ldi	r24, 0xFF	; 255
 5dc:	81 1d       	adc	r24, r1
 5de:	81 1d       	adc	r24, r1
 5e0:	08 95       	ret

000005e2 <__fp_inf>:
 5e2:	97 f9       	bld	r25, 7
 5e4:	9f 67       	ori	r25, 0x7F	; 127
 5e6:	80 e8       	ldi	r24, 0x80	; 128
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	60 e0       	ldi	r22, 0x00	; 0
 5ec:	08 95       	ret

000005ee <__fp_nan>:
 5ee:	9f ef       	ldi	r25, 0xFF	; 255
 5f0:	80 ec       	ldi	r24, 0xC0	; 192
 5f2:	08 95       	ret

000005f4 <__fp_pscA>:
 5f4:	00 24       	eor	r0, r0
 5f6:	0a 94       	dec	r0
 5f8:	16 16       	cp	r1, r22
 5fa:	17 06       	cpc	r1, r23
 5fc:	18 06       	cpc	r1, r24
 5fe:	09 06       	cpc	r0, r25
 600:	08 95       	ret

00000602 <__fp_pscB>:
 602:	00 24       	eor	r0, r0
 604:	0a 94       	dec	r0
 606:	12 16       	cp	r1, r18
 608:	13 06       	cpc	r1, r19
 60a:	14 06       	cpc	r1, r20
 60c:	05 06       	cpc	r0, r21
 60e:	08 95       	ret

00000610 <__fp_round>:
 610:	09 2e       	mov	r0, r25
 612:	03 94       	inc	r0
 614:	00 0c       	add	r0, r0
 616:	11 f4       	brne	.+4      	; 0x61c <__fp_round+0xc>
 618:	88 23       	and	r24, r24
 61a:	52 f0       	brmi	.+20     	; 0x630 <__fp_round+0x20>
 61c:	bb 0f       	add	r27, r27
 61e:	40 f4       	brcc	.+16     	; 0x630 <__fp_round+0x20>
 620:	bf 2b       	or	r27, r31
 622:	11 f4       	brne	.+4      	; 0x628 <__fp_round+0x18>
 624:	60 ff       	sbrs	r22, 0
 626:	04 c0       	rjmp	.+8      	; 0x630 <__fp_round+0x20>
 628:	6f 5f       	subi	r22, 0xFF	; 255
 62a:	7f 4f       	sbci	r23, 0xFF	; 255
 62c:	8f 4f       	sbci	r24, 0xFF	; 255
 62e:	9f 4f       	sbci	r25, 0xFF	; 255
 630:	08 95       	ret

00000632 <__fp_split3>:
 632:	57 fd       	sbrc	r21, 7
 634:	90 58       	subi	r25, 0x80	; 128
 636:	44 0f       	add	r20, r20
 638:	55 1f       	adc	r21, r21
 63a:	59 f0       	breq	.+22     	; 0x652 <__fp_splitA+0x10>
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	71 f0       	breq	.+28     	; 0x65c <__fp_splitA+0x1a>
 640:	47 95       	ror	r20

00000642 <__fp_splitA>:
 642:	88 0f       	add	r24, r24
 644:	97 fb       	bst	r25, 7
 646:	99 1f       	adc	r25, r25
 648:	61 f0       	breq	.+24     	; 0x662 <__fp_splitA+0x20>
 64a:	9f 3f       	cpi	r25, 0xFF	; 255
 64c:	79 f0       	breq	.+30     	; 0x66c <__fp_splitA+0x2a>
 64e:	87 95       	ror	r24
 650:	08 95       	ret
 652:	12 16       	cp	r1, r18
 654:	13 06       	cpc	r1, r19
 656:	14 06       	cpc	r1, r20
 658:	55 1f       	adc	r21, r21
 65a:	f2 cf       	rjmp	.-28     	; 0x640 <__fp_split3+0xe>
 65c:	46 95       	lsr	r20
 65e:	f1 df       	rcall	.-30     	; 0x642 <__fp_splitA>
 660:	08 c0       	rjmp	.+16     	; 0x672 <__fp_splitA+0x30>
 662:	16 16       	cp	r1, r22
 664:	17 06       	cpc	r1, r23
 666:	18 06       	cpc	r1, r24
 668:	99 1f       	adc	r25, r25
 66a:	f1 cf       	rjmp	.-30     	; 0x64e <__fp_splitA+0xc>
 66c:	86 95       	lsr	r24
 66e:	71 05       	cpc	r23, r1
 670:	61 05       	cpc	r22, r1
 672:	08 94       	sec
 674:	08 95       	ret

00000676 <__fp_zero>:
 676:	e8 94       	clt

00000678 <__fp_szero>:
 678:	bb 27       	eor	r27, r27
 67a:	66 27       	eor	r22, r22
 67c:	77 27       	eor	r23, r23
 67e:	cb 01       	movw	r24, r22
 680:	97 f9       	bld	r25, 7
 682:	08 95       	ret

00000684 <__gesf2>:
 684:	0e 94 cd 02 	call	0x59a	; 0x59a <__fp_cmp>
 688:	08 f4       	brcc	.+2      	; 0x68c <__gesf2+0x8>
 68a:	8f ef       	ldi	r24, 0xFF	; 255
 68c:	08 95       	ret

0000068e <_exit>:
 68e:	f8 94       	cli

00000690 <__stop_program>:
 690:	ff cf       	rjmp	.-2      	; 0x690 <__stop_program>
